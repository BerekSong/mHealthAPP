package com.example.activitydetector;


import android.app.Activity;
import android.bluetooth.BluetoothAdapter;
import android.content.Intent;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.Toast;

public class ConnectFragment extends Fragment{

	private BluetoothAdapter myBluetoothAdapter = null;
	static final int REQUEST_ENABLE_BT = 1;
	static final int REQUEST_CONNECT_DEVICE = 2;
	
	public ConnectFragment() {
		super();
		// TODO Auto-generated constructor stub
	}
	
	@Override
	public void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		
	}
	
	
	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {
		// TODO Auto-generated method stub
//		View v = LayoutInflater.from(getActivity()).inflate(R.layout.layout,
//				null);
//		
//		return v;
		
		LinearLayout mLinearLayout = (LinearLayout) LayoutInflater.from(getActivity()).inflate(R.layout.connect, null);
		
		Button connectButton = (Button) mLinearLayout.findViewById(R.id.button_connect);
		connectButton.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				myBluetoothAdapter = BluetoothAdapter.getDefaultAdapter();
				if (myBluetoothAdapter == null) {
					Toast.makeText(getActivity().getApplicationContext(), "Device does not support Bluetooth\n",
							Toast.LENGTH_LONG).show();
				}
				
				if (!myBluetoothAdapter.isEnabled()) {
					Intent enableBtIntent = new Intent(BluetoothAdapter.ACTION_REQUEST_ENABLE);
					startActivityForResult(enableBtIntent, REQUEST_ENABLE_BT);
				} else {
					Intent serverIntent = new Intent(getActivity().getApplicationContext(), DeviceListActivity.class);
					startActivityForResult(serverIntent,REQUEST_CONNECT_DEVICE);
				}
			}
		});
		
		Button disconnectButton = (Button) mLinearLayout.findViewById(R.id.button_disconnect);
		disconnectButton.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				
			}
		});
		
		Button streamingButton = (Button) mLinearLayout.findViewById(R.id.button_stream);
		streamingButton.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				
			}
		});
		
		Button configurationButton = (Button) mLinearLayout.findViewById(R.id.button_configuration);
		configurationButton.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				
			}
		});
		
		Button connectedButton = (Button) mLinearLayout.findViewById(R.id.button_connected);
		connectedButton.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				
			}
		});
		
		
		return mLinearLayout;
	}
	
	
	public void onActivityResult(int requestCode, int resultCode, Intent data) {

		switch (requestCode) {
		case REQUEST_ENABLE_BT:
			// When the request to enable Bluetooth returns
			if (resultCode == Activity.RESULT_OK) {
				Toast.makeText(getActivity().getApplicationContext(), 
						"Bluetooth is now enabled", Toast.LENGTH_SHORT).show();
				Intent serverIntent = new Intent(getActivity().getApplicationContext(),
						DeviceListActivity.class);
				startActivityForResult(serverIntent, REQUEST_CONNECT_DEVICE);
			} else {
				// User did not enable Bluetooth or an error occured
				Toast.makeText(getActivity().getApplicationContext(),
						"Bluetooth not enabled\nExiting...", Toast.LENGTH_SHORT).show();
			}
			break;
		case REQUEST_CONNECT_DEVICE:
			// When DeviceListActivity returns with a device to connect
			if (resultCode == Activity.RESULT_OK) {
//				String address = data.getExtras().getString(DeviceListActivity.EXTRA_DEVICE_ADDRESS);

			}
			break;
		}
	}
	
}
