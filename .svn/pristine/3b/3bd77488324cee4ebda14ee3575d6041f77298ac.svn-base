package com.example.activitydetector;

import systemManager.SystemManager;
import systemManager.guidelines.youtube.Youtube;
import android.app.AlertDialog;
import android.content.DialogInterface;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.LinearLayout.LayoutParams;
import android.widget.ListView;
import android.widget.Toast;
import android.widget.ToggleButton;

import com.example.activitydetector.R.layout;
import com.google.android.youtube.player.YouTubeBaseActivity;
import com.google.android.youtube.player.YouTubeInitializationResult;
import com.google.android.youtube.player.YouTubePlayer;
import com.google.android.youtube.player.YouTubePlayerView;
import com.google.android.youtube.player.YouTubePlayer.Provider;

public class YoutubeActivity extends YouTubeBaseActivity implements YouTubePlayer.OnInitializedListener  {

	SystemManager sm;
	YouTubePlayerView youTubeView; 
	String URL_VIDEO = "CaA-k1l0xa4";
	String KEY_DEVELOPER = "AIzaSyBIIs0u0NXhsZguv8nCNvSzUmflTt7K1Ek";
	YouTubePlayerView youtubePlayerView;
	ListView videosListView;
	int height = 0;
	ToggleButton listExtendButton;
	ToggleButton playerExtendButton;
	Button changeChannelButton;
	Youtube youtube;
	
	protected void onCreate(Bundle savedInstanceState) {
		
		super.onCreate(savedInstanceState);
		//Set of view where videos and the listView (is there is any) will appear
		setContentView(R.layout.youtube);		
		//Object View for the youtubePlayerView inside the current layout View
		youtubePlayerView = (YouTubePlayerView) findViewById(R.id.youtube_view);
		//Youtube class needs context, a youtubePlayerView object and a key developer;
		
		
		sm = SystemManager.getInstance();
		youtube = sm.getYoutubePlayer(getApplicationContext(), youtubePlayerView, KEY_DEVELOPER);
		//Youtube youtube = new Youtube(getApplicationContext(), youtubeView, KEY_DEVELOPER);
		
		//If to display a video is the only thing wanted, there is no need in using a listView
		//youtube.reproduceSingleVideoMode(URL_VIDEO);
		
		//If a list of videos is needed, its necessary to provide the playlist ID and a layout of every entry
		// in the playlist
		videosListView = (ListView) findViewById(R.id.listListView);
		youtube.reproducePlaylistMode(videosListView, R.layout.entry, "PLOhl4anP1Mp1vJKmmqGAcu10h5OSbx4zf");
		
		listExtendButton =  (ToggleButton) findViewById(R.id.listExtendButton);
		
		listExtendButton.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				
				if(listExtendButton.isChecked() && playerExtendButton.isChecked()){
					
					playerExtendButton.performClick();
				}
				
				if(listExtendButton.isChecked()){	
					
					youtubePlayerView.setVisibility(View.GONE);
					LayoutParams params = (LayoutParams) videosListView.getLayoutParams();
					height = params.height;
					params.height = android.view.ViewGroup.LayoutParams.WRAP_CONTENT;	
				}
				
				else{

					youtubePlayerView.setVisibility(View.VISIBLE);
					LayoutParams params = (LayoutParams) videosListView.getLayoutParams();
					params.height = height;
				}
				
			}
		});

		playerExtendButton =  (ToggleButton) findViewById(R.id.playerExtendButton);
		
		playerExtendButton.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				
				if(listExtendButton.isChecked() && playerExtendButton.isChecked()){
					
					listExtendButton.performClick();
				}
				
				if(playerExtendButton.isChecked()){			
					videosListView.setVisibility(View.GONE);
					LayoutParams params = (LayoutParams) youtubePlayerView.getLayoutParams();
					height = params.height;
					params.height = android.view.ViewGroup.LayoutParams.FILL_PARENT;	
				}
				
				else{
					videosListView.setVisibility(View.VISIBLE);
					LayoutParams params = (LayoutParams) youtubePlayerView.getLayoutParams();
					params.height = height;
				}
			}
		});
		
		changeChannelButton = (Button) findViewById(R.id.changeChannelButton);
		
		changeChannelButton.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
	
				
				muestraDialogo();
				
			}
		});
		
	}
	
	@Override
	public void onInitializationFailure(Provider arg0,
			YouTubeInitializationResult arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void onInitializationSuccess(Provider arg0, YouTubePlayer arg1,
			boolean arg2) {
		// TODO Auto-generated method stub
		
	}
	
	void muestraDialogo(){
		final CharSequence[] items={"Fascitis","Back","Knee", "Ankle", "General Health"};
		AlertDialog.Builder builder3=new AlertDialog.Builder(this);
		builder3.setTitle("Select playlist").setItems(items, new DialogInterface.OnClickListener() {
		@Override
		public void onClick(DialogInterface dialog, int which) {
			
			switch(which) {
		    case 0:
				youtube.reproducePlaylistMode(videosListView, R.layout.entry, "PLOhl4anP1Mp03bzvTNXgrLQvQ38vTC0Al");  	
		        break;
		    case 1:
				youtube.reproducePlaylistMode(videosListView, R.layout.entry, "PLOhl4anP1Mp3GR-PVzgH2bBFZbW1fX8HS");
		        break;
		    case 2:
				youtube.reproducePlaylistMode(videosListView, R.layout.entry, "PLOhl4anP1Mp1vJKmmqGAcu10h5OSbx4zf");
				break;
		    case 3:
				youtube.reproducePlaylistMode(videosListView, R.layout.entry, "PLOhl4anP1Mp3hUCb87AM_Gj87__7cJJJc");
				break;
		    case 4:
				youtube.reproducePlaylistMode(videosListView, R.layout.entry, "PLOhl4anP1Mp1vJKmmqGAcu10h5OSbx4zf");
				break;

		}
		// TODO Auto-generated method stub
		Toast.makeText(getApplicationContext(), "Selected playlist: "+items[which], Toast.LENGTH_LONG).show();
		}
		});
		builder3.show();
		}
	
	
}